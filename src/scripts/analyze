#!/bin/sh

#
# Tool to analyze a subset of the nodes on a PBS server
#
# Usage
#    analyze
#    analyze 13
#    analyze 13:16
#    analyze 13,15,44
#
# Options:
#    -w: display full width output, even if it doesn't fit on screen.
#    -s: sort the output
#

export LC_ALL=C
SORT_CMD=cat
#WIDE=
while (( $# > 0 )); do
   case "$1" in
   -w)       WIDE=1;;
   -s*)      SORT_CMD=sort;;
   -d)       DEBUG=1;;
   *)        echo Unknown option "$1"; exit 1;;
   esac
   shift
done

CUT_CMD=cat
if [[ -t 1 && ! $WIDE ]]; then
   # Writing to terminal, chop lines to fit terminal width unless -w was specified
   COLUMNS=`stty -a | egrep -o 'columns [0-9]+' | egrep -o '[0-9]+'`
   if [[ $COLUMNS =~ '[0-9]+' ]]; then
      CUT_CMD="cut -c1-$COLUMNS"
   fi
fi

if [[ $DEBUG ]]; then
   echo "
WIDE=$WIDE
SORT_CMD=$SORT_CMD
CUT_CMD=$CUT_CMD
"
fi >&2

cmd="pbsnodes -a | egrep 'blz|vns|state|np|que|job' | grep -v 'status'"
#echo "$cmd"
eval $cmd |
  perl -pe 'chomp; s/^(blz|vns)/\n\1/; s/free$/free    /' |
  perl -ple '
    sub pad($$) { sprintf("%-$_[1]s ", $_[0]) }

    BEGIN {
      $total_job_count = 0;
      $total_cpus = 0;
      $total_free_cpus = 0;
    }

    my $job_count = 0;
    while ( /\//gc ) { $job_count++; }
    my ($num_cpus) = /np = (\d+)/;
    my $free_cpus = ( /state = free/ ? ($num_cpus - $job_count) : 0 );

    $total_job_count += $job_count;
    $total_cpus += $num_cpus;
    $total_free_cpus += $free_cpus;

    s/(jobs = .*?)\s*(queue =.*)/$2    $1/;     # Relevant on venus only
    s/\d\d?\///g;
    s/\s*jobs = / /;
    s/,(smem|bmem|master|slave|fast)\b//g;      # Hide obsolete properties
    #s/\s*properties = (\S+)//;
    s/\s*properties = (\S+)/"  " . pad($1,12)/e;
    s/\s*np = (\d+)\s*/  np=$1,/;
    s/job-exclusive/job-excl/;
    if ( $job_count > 0 && $job_count < $num_cpus ) {
      s/free/$job_count\/$num_cpus/;
    }
    s/\s*state = (\S+)/"   " . pad($1,8)/e;
    s/\.(balzac|venus)[^ ]*//g;
    s/(\s[-\d]+)(\1)+\b/ $1 . " x " . (scalar(split(m# #, $&))-1) /eg;
    s/^((?:blz|vns)\d\d\d) /$1/;
    END {
      print "|||";
      my $offline = ($total_cpus - $total_free_cpus - $total_job_count);
      print "||| $total_cpus CPUs: ",
            ($offline > 0 ? "$offline down or offline, " : ""),
            "$total_job_count busy, ",
            "$total_free_cpus free";
    }
  ' |
  $SORT_CMD |
  $CUT_CMD

